From 18e69d251b7fd3e19adc8a1dabd883641c585455 Mon Sep 17 00:00:00 2001
From: Tk-Glitch <ti3nou@gmail.com>
Date: Mon, 9 Dec 2019 11:52:32 +0100
Subject: Initial 5.5 patch, based on Isaak I. Aleksandrov's - https://gitlab.com/snippets/1921156


diff --git a/kernel-dkms/common/inc/nv-drm.h b/kernel-dkms/common/inc/nv-drm.h
new file mode 100644
index 0000000..07e9f3c
--- /dev/null
+++ b/kernel-dkms/common/inc/nv-drm.h
@@ -0,0 +1,36 @@
+#ifndef _NV_DRM_H_
+#define _NV_DRM_H_
+
+#include "conftest.h"
+
+#if defined(NV_DRM_DRMP_H_PRESENT)
+#include <drm/drmP.h>
+#else
+#include <linux/agp_backend.h>
+#include <linux/file.h>
+#include <linux/init.h>
+#include <linux/jiffies.h>
+#include <linux/kernel.h>
+#include <linux/mutex.h>
+#include <linux/slab.h>
+#include <linux/types.h>
+#include <asm/pgalloc.h>
+#include <linux/uaccess.h>
+
+#include <uapi/drm/drm.h>
+#include <uapi/drm/drm_mode.h>
+
+#include <drm/drm_agpsupport.h>
+#include <drm/drm_crtc.h>
+#include <drm/drm_drv.h>
+#include <drm/drm_prime.h>
+#include <drm/drm_pci.h>
+#include <drm/drm_ioctl.h>
+#include <drm/drm_sysfs.h>
+#include <drm/drm_vblank.h>
+#include <drm/drm_device.h>
+
+#include <drm/drm_gem.h>
+#endif
+
+#endif
diff --git a/kernel-dkms/conftest.sh b/kernel-dkms/conftest.sh
index a54e2c0..15140d0 100755
--- a/kernel-dkms/conftest.sh
+++ b/kernel-dkms/conftest.sh
@@ -1115,31 +1115,36 @@ compile_test() {
         drm_available)
             # Determine if the DRM subsystem is usable
             CODE="
+            #include <linux/version.h>
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
             #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
             #endif
             #if !defined(CONFIG_DRM) && !defined(CONFIG_DRM_MODULE)
             #error DRM not enabled
             #endif
+#endif
             void conftest_drm_available(void) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
                 struct drm_driver drv;
 
                 /* 2013-01-15 89177644a7b6306e6084a89eab7e290f4bfef397 */
                 drv.gem_prime_pin = 0;
                 drv.gem_prime_get_sg_table = 0;
                 drv.gem_prime_vmap = 0;
                 drv.gem_prime_vunmap = 0;
                 (void)drm_gem_prime_import;
                 (void)drm_gem_prime_export;
 
                 /* 2013-10-02 1bb72532ac260a2d3982b40bdd4c936d779d0d16 */
                 (void)drm_dev_alloc;
 
                 /* 2013-10-02 c22f0ace1926da399d9a16dfaf09174c1b03594c */
                 (void)drm_dev_register;
 
                 /* 2013-10-02 c3a49737ef7db0bdd4fcf6cf0b7140a883e32b2a */
                 (void)drm_dev_unregister;
+#endif
             }"
 
             compile_check_conftest "$CODE" "NV_DRM_AVAILABLE" "" "generic"
@@ -1746,17 +1722,22 @@ compile_test() {
             # prototype from drm/drm_atomic.h to drm/drm_atomic_uapi.h.
             #
             echo "$CONFTEST_PREAMBLE
+            #include <linux/version.h>
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
             #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
             #endif
             #include <drm/drm_atomic.h>
             #if !defined(CONFIG_DRM) && !defined(CONFIG_DRM_MODULE)
             #error DRM not enabled
             #endif
+#endif
             void conftest_drm_atomic_modeset_available(void) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
                 size_t a;
 
                 a = offsetof(struct drm_mode_config_funcs, atomic_state_alloc);
+#endif
             }" > conftest$$.c;
 
             $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
@@ -1876,7 +1842,11 @@ compile_test() {
             # attached drivers") in v3.14 (2013-12-11)
             #
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #else
+            #include <drm/drm_drv.h>
+            #endif
             int conftest_drm_driver_has_legacy_dev_list(void) {
                 return offsetof(struct drm_driver, legacy_dev_list);
             }"
@@ -1900,7 +1870,11 @@ compile_test() {
             #   2017-07-23  e6fc3b68558e4c6d8d160b5daf2511b99afa8814
             #
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #else
+            #include <drm/drm_crtc.h>
+            #endif
 
             int conftest_drm_crtc_init_with_planes_has_name_arg(void) {
                 return
@@ -1916,7 +1890,11 @@ compile_test() {
             compile_check_conftest "$CODE" "NV_DRM_CRTC_INIT_WITH_PLANES_HAS_NAME_ARG" "" "types"
 
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #else
+            #include <drm/drm_encoder.h>
+            #endif
 
             int conftest_drm_encoder_init_has_name_arg(void) {
                 return
@@ -1931,7 +1909,11 @@ compile_test() {
             compile_check_conftest "$CODE" "NV_DRM_ENCODER_INIT_HAS_NAME_ARG" "" "types"
 
             echo "$CONFTEST_PREAMBLE
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #else
+            #include <drm/drm_plane.h>
+            #endif
 
             int conftest_drm_universal_plane_init_has_format_modifiers_arg(void) {
                 return
@@ -1958,7 +1940,11 @@ compile_test() {
                 echo "#undef NV_DRM_UNIVERSAL_PLANE_INIT_HAS_FORMAT_MODIFIERS_ARG" | append_conftest "types"
 
                 echo "$CONFTEST_PREAMBLE
+                #if defined(NV_DRM_DRMP_H_PRESENT)
                 #include <drm/drmP.h>
+                #else
+                #include <drm/drm_plane.h>
+                #endif
 
                 int conftest_drm_universal_plane_init_has_name_arg(void) {
                     return
@@ -3037,7 +3023,9 @@ compile_test() {
             # drm_framebuffer_{get,put}()") in v4.12 (2017-02-28).
             #
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #endif
             #if defined(NV_DRM_DRM_FRAMEBUFFER_H_PRESENT)
             #include <drm/drm_framebuffer.h>
             #endif
@@ -3056,7 +3044,9 @@ compile_test() {
             # drm_gem_object_{get,put}()") in v4.12 (2017-02-28).
             #
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #endif
             #if defined(NV_DRM_DRM_GEM_H_PRESENT)
             #include <drm/drm_gem.h>
             #endif
@@ -3075,7 +3065,9 @@ compile_test() {
             # functions") in v4.15 (2017-09-26).
             #
             CODE="
+            #if defined(NV_DRM_DRMP_H_PRESENT)
             #include <drm/drmP.h>
+            #endif
             #if defined(NV_DRM_DRM_DRV_H_PRESENT)
             #include <drm/drm_drv.h>
             #endif
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-connector.c b/kernel-dkms/nvidia-drm/nvidia-drm-connector.c
index 1553ebc..841dead 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-connector.c
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-connector.c
@@ -71,7 +71,12 @@ static enum drm_connector_status __nv_drm_connector_detect_internal(
     struct nv_drm_encoder *nv_detected_encoder = NULL;
 
     struct NvKmsKapiDynamicDisplayParams *pDetectParams = NULL;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
     unsigned int i;
+#else
+    struct nv_drm_encoder *nv_encoder;
+    struct drm_encoder *encoder = NULL;
+#endif
 
     BUG_ON(!mutex_is_locked(&dev->mode_config.mutex));
 
@@ -87,21 +87,28 @@ static enum drm_connector_status __nv_drm_connector_detect_internal(
         goto done;
     }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
     for (i = 0;
          i < DRM_CONNECTOR_MAX_ENCODER && detected_encoder == NULL; i++) {
         struct drm_encoder *encoder;
         struct nv_drm_encoder *nv_encoder;
 
         if (connector->encoder_ids[i] == 0) {
+#else
+    drm_connector_for_each_possible_encoder(connector, encoder) {
+        if (detected_encoder != NULL) {
+#endif
             break;
         }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
         encoder = nv_drm_encoder_find(dev, connector->encoder_ids[i]);
 
         if (encoder == NULL) {
             BUG_ON(encoder != NULL);
             continue;
         }
+#endif
 
         /*
          * DVI-I connectors can drive both digital and analog
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-connector.h b/kernel-dkms/nvidia-drm/nvidia-drm-connector.h
index f74e22c..099390d 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-connector.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-connector.h
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 #include "nvtypes.h"
 #include "nvkms-api-types.h"
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-crtc.h b/kernel-dkms/nvidia-drm/nvidia-drm-crtc.h
index 31ef3b5..5de3a51 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-crtc.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-crtc.h
@@ -29,7 +29,11 @@
 
 #include "nvidia-drm-helper.h"
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #include "nvtypes.h"
 #include "nvkms-kapi.h"
 
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-drv.c b/kernel-dkms/nvidia-drm/nvidia-drm-drv.c
index a66d3cc..06bf859 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-drv.c
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-drv.c
@@ -39,7 +39,11 @@
 
 #include "nvidia-drm-ioctl.h"
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 /*
  * Commit fcd70cd36b9b ("drm: Split out drm_probe_helper.h")
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-encoder.h b/kernel-dkms/nvidia-drm/nvidia-drm-encoder.h
index bbaf986..af341a8 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-encoder.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-encoder.h
@@ -32,7 +32,11 @@
 #if defined(NV_DRM_DRM_ENCODER_H_PRESENT)
 #include <drm/drm_encoder.h>
 #else
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #endif
 
 #include "nvkms-kapi.h"
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-fb.h b/kernel-dkms/nvidia-drm/nvidia-drm-fb.h
index 7f292ce..d13bc4c 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-fb.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-fb.h
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #include "nvidia-drm-gem-nvkms-memory.h"
 #include "nvkms-kapi.h"
 
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-gem.h b/kernel-dkms/nvidia-drm/nvidia-drm-gem.h
index b621969..326f810 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-gem.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-gem.h
@@ -29,7 +29,11 @@
 
 #include "nvidia-drm-priv.h"
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #include "nvkms-kapi.h"
 
 #if defined(NV_DRM_DRIVER_HAS_GEM_PRIME_RES_OBJ)
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-helper.c b/kernel-dkms/nvidia-drm/nvidia-drm-helper.c
index da602ac..e5d6daa 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-helper.c
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-helper.c
@@ -31,7 +31,11 @@
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #if defined(NV_DRM_DRM_ATOMIC_UAPI_H_PRESENT)
 #include <drm/drm_atomic_uapi.h>
 #endif
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-helper.h b/kernel-dkms/nvidia-drm/nvidia-drm-helper.h
index 8f050d8..71c4b90 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-helper.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-helper.h
@@ -20,6 +20,8 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
+
 #ifndef __NVIDIA_DRM_HELPER_H__
 #define __NVIDIA_DRM_HELPER_H__
 
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 /*
  * drm_dev_put() is added by commit 9a96f55034e41b4e002b767e9218d55f03bdff7d
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-modeset.h b/kernel-dkms/nvidia-drm/nvidia-drm-modeset.h
index 06659c5..e9d7b70 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-modeset.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-modeset.h
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 struct drm_atomic_state *nv_drm_atomic_state_alloc(struct drm_device *dev);
 void nv_drm_atomic_state_clear(struct drm_atomic_state *state);
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-os-interface.h b/kernel-dkms/nvidia-drm/nvidia-drm-os-interface.h
index f43f851..7f4ff8b 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-os-interface.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-os-interface.h
@@ -29,7 +29,11 @@
 
 #if defined(NV_DRM_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 /* Set to true when the atomic modeset feature is enabled. */
 extern bool nv_drm_modeset_module_param;
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-prime-fence.h b/kernel-dkms/nvidia-drm/nvidia-drm-prime-fence.h
index 20da923..f3cc2b4 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-prime-fence.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-prime-fence.h
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 #if defined(NV_DRM_DRIVER_HAS_GEM_PRIME_RES_OBJ)
 
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-priv.h b/kernel-dkms/nvidia-drm/nvidia-drm-priv.h
index 9076835..77a95f3 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-priv.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-priv.h
@@ -20,6 +20,8 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
+
 #ifndef __NVIDIA_DRM_PRIV_H__
 #define __NVIDIA_DRM_PRIV_H__
 
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 
 #if defined(NV_DRM_DRM_GEM_H_PRESENT)
 #include <drm/drm_gem.h>
diff --git a/kernel-dkms/nvidia-drm/nvidia-drm-utils.h b/kernel-dkms/nvidia-drm/nvidia-drm-utils.h
index 6d24120..95190c4 100644
--- a/kernel-dkms/nvidia-drm/nvidia-drm-utils.h
+++ b/kernel-dkms/nvidia-drm/nvidia-drm-utils.h
@@ -27,7 +27,11 @@
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 5, 0)
 #include <drm/drmP.h>
+#else
+#include "nv-drm.h"
+#endif
 #include "nvkms-kapi.h"
 
 struct NvKmsKapiConnectorInfo*
