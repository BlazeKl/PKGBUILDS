--- a/libs/vkd3d/command.c	
+++ a/libs/vkd3d/command.c	
@@ -1372,14 +1372,17 @@ static void d3d12_command_list_invalidate_current_render_pass(struct d3d12_comma
 static void d3d12_command_list_invalidate_bindings(struct d3d12_command_list *list,
         struct d3d12_pipeline_state *state)
 {
+    struct vkd3d_pipeline_bindings *bindings;
+
     if (!state)
         return;
 
+    bindings = &list->pipeline_bindings[state->vk_bind_point];
+
+    bindings->descriptor_table_dirty_mask |= bindings->descriptor_table_active_mask;
+
     if (state->uav_counter_mask)
-    {
-        struct vkd3d_pipeline_bindings *bindings = &list->pipeline_bindings[state->vk_bind_point];
         bindings->uav_counter_dirty_mask = ~(uint8_t)0;
-    }
 }
 
 static bool vk_barrier_parameters_from_d3d12_resource_state(unsigned int state,

diff --git a/libs/vkd3d/command.c b/libs/vkd3d/command.c
index 7adba3bed883..54986bce0044 100644
--- a/libs/vkd3d/command.c
+++ b/libs/vkd3d/command.c
@@ -4924,7 +4924,7 @@ static HRESULT STDMETHODCALLTYPE d3d12_command_queue_Wait(ID3D12CommandQueue *if
 {
     FIXME("iface %p, fence %p, value %#"PRIx64" stub!\n", iface, fence, value);
 
-    return E_NOTIMPL;
+    return S_OK;
 }
 
 static HRESULT STDMETHODCALLTYPE d3d12_command_queue_GetTimestampFrequency(ID3D12CommandQueue *iface,
